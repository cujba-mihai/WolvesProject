{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Mihai\\\\Desktop\\\\Projects\\\\GIT\\\\WolvesProject\\\\wolves-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useEffect,useState}from'react';var useDelayUnmount=function useDelayUnmount(isMounted,delayTime){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),shouldRender=_useState2[0],setShouldRender=_useState2[1];useEffect(function(){var timeoutId;if(isMounted&&!shouldRender){setShouldRender(true);}else if(!isMounted&&shouldRender){timeoutId=setTimeout(function(){return setShouldRender(false);},delayTime);}return function(){return clearTimeout(timeoutId);};},[isMounted,delayTime,shouldRender]);return shouldRender;};export default useDelayUnmount;","map":{"version":3,"sources":["C:/Users/Mihai/Desktop/Projects/GIT/WolvesProject/wolves-project/src/utils/useDelayUnmount.js"],"names":["useEffect","useState","useDelayUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout"],"mappings":"mKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CAChD,cAAwCH,QAAQ,CAAC,KAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eAEAN,SAAS,CAAC,UAAM,CACd,GAAIO,CAAAA,SAAJ,CACA,GAAIJ,SAAS,EAAI,CAACE,YAAlB,CAAgC,CAC9BC,eAAe,CAAC,IAAD,CAAf,CACD,CAFD,IAEO,IAAI,CAACH,SAAD,EAAcE,YAAlB,CAAgC,CACrCE,SAAS,CAAGC,UAAU,CAAC,iBAAMF,CAAAA,eAAe,CAAC,KAAD,CAArB,EAAD,CAA+BF,SAA/B,CAAtB,CACD,CACD,MAAO,kBAAMK,CAAAA,YAAY,CAACF,SAAD,CAAlB,EAAP,CACD,CARQ,CAQN,CAACJ,SAAD,CAAYC,SAAZ,CAAuBC,YAAvB,CARM,CAAT,CASA,MAAOA,CAAAA,YAAP,CACD,CAbD,CAeA,cAAeH,CAAAA,eAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useDelayUnmount = (isMounted, delayTime) => {\r\n  const [shouldRender, setShouldRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timeoutId;\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true);\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime);\r\n    }\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isMounted, delayTime, shouldRender]);\r\n  return shouldRender;\r\n};\r\n\r\nexport default useDelayUnmount;\r\n"]},"metadata":{},"sourceType":"module"}