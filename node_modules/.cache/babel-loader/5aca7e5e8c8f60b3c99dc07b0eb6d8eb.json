{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihai\\\\Desktop\\\\Projects\\\\GIT\\\\WolvesProject\\\\wolves-project\\\\src\\\\components\\\\main\\\\Hero.jsx\",\n    _s2 = $RefreshSig$();\n\nimport Card from './partials/Card';\nimport './styles/hero.scss';\nimport * as WOLF_IMAGES from '../../api/wolves.json';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withFetch = (WrappedComponent, requestUrl) => {\n  var _s = $RefreshSig$();\n\n  const WithFetch = props => {\n    _s();\n\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isError, setIsError] = useState(false);\n    useEffect(() => {\n      if (requestUrl) fetchData(requestUrl);\n    }, []);\n\n    const fetchData = async requestUrl => {\n      setIsLoading(true);\n      setIsError(false);\n\n      try {\n        const response = await fetch(requestUrl);\n\n        if (response.ok) {\n          const data = await response.json();\n          setIsLoading(false);\n          setData(data);\n        } else {\n          throw new Error('Fetch request error');\n        }\n      } catch (err) {\n        setIsLoading(false);\n        setIsError(err);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      data: data,\n      isLoading: isLoading,\n      isError: isError,\n      ...props,\n      getData: requestUrl => fetchData(requestUrl)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(WithFetch, \"6EDkcU5PbuSsesaofET2GVZ0HMs=\");\n\n  return WithFetch;\n};\n\nconst images = async () => {\n  const url = '../../api/wolves.json';\n\n  try {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        return JSON.parse([xhr.response]);\n      }\n    };\n\n    xhr.send();\n  } catch (e) {\n    throw new Error('FETCH FAILED');\n  }\n};\n\nconst Hero = () => {\n  _s2();\n\n  const {\n    wolves\n  } = WOLF_IMAGES;\n  const [wolfImages, setWolfImages] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const result = await images();\n      console.log('RESULT:  ', result);\n      setWolfImages(result);\n      console.log(wolfImages);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero__head-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"hero__heading\",\n          children: \"LATEST STORIES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"hero__subheading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hero__subheading_isPrimary\",\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), \" for full access to read stories from National Geographic.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero__cart-container\",\n        children: wolves ? wolves.map((e, i) => /*#__PURE__*/_jsxDEV(Card, {\n          images: e.images\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 36\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Hero, \"KOhr3iDLDN/vIJXv4Ik2UEcDUaE=\");\n\n_c = Hero;\nexport default Hero;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"sources":["C:/Users/Mihai/Desktop/Projects/GIT/WolvesProject/wolves-project/src/components/main/Hero.jsx"],"names":["Card","WOLF_IMAGES","useEffect","useState","withFetch","WrappedComponent","requestUrl","WithFetch","props","data","setData","isLoading","setIsLoading","isError","setIsError","fetchData","response","fetch","ok","json","Error","err","images","url","xhr","XMLHttpRequest","open","onreadystatechange","readyState","JSON","parse","send","e","Hero","wolves","wolfImages","setWolfImages","result","console","log","map","i"],"mappings":"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","sourcesContent":["import Card from './partials/Card';\r\nimport './styles/hero.scss';\r\nimport * as WOLF_IMAGES from '../../api/wolves.json';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst withFetch = (WrappedComponent, requestUrl) => {\r\n  const WithFetch = (props) => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if (requestUrl) fetchData(requestUrl);\r\n    }, []);\r\n\r\n    const fetchData = async (requestUrl) => {\r\n      setIsLoading(true);\r\n      setIsError(false);\r\n\r\n      try {\r\n        const response = await fetch(requestUrl);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          setIsLoading(false);\r\n          setData(data);\r\n        } else {\r\n          throw new Error('Fetch request error');\r\n        }\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setIsError(err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={data}\r\n        isLoading={isLoading}\r\n        isError={isError}\r\n        {...props}\r\n        getData={(requestUrl) => fetchData(requestUrl)}\r\n      />\r\n    );\r\n  };\r\n\r\n  return WithFetch;\r\n};\r\n\r\nconst images = async () => {\r\n  const url = '../../api/wolves.json';\r\n\r\n  try {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url);\r\n\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 4) {\r\n        return JSON.parse([xhr.response]);\r\n      }\r\n    };\r\n\r\n    xhr.send();\r\n  } catch (e) {\r\n    throw new Error('FETCH FAILED');\r\n  }\r\n};\r\n\r\nconst Hero = () => {\r\n  const { wolves } = WOLF_IMAGES;\r\n  const [wolfImages, setWolfImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await images();\r\n      console.log('RESULT:  ', result);\r\n      setWolfImages(result);\r\n      console.log(wolfImages);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"hero\">\r\n      <div className=\"hero__container\">\r\n        <div className=\"hero__head-container\">\r\n          <h1 className=\"hero__heading\">LATEST STORIES</h1>\r\n          <h3 className=\"hero__subheading\">\r\n            <span className=\"hero__subheading_isPrimary\">Subscribe</span> for\r\n            full access to read stories from National Geographic.\r\n          </h3>\r\n        </div>\r\n        <div className=\"hero__cart-container\">\r\n          {wolves\r\n            ? wolves.map((e, i) => <Card key={i} images={e.images} />)\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"]},"metadata":{},"sourceType":"module"}